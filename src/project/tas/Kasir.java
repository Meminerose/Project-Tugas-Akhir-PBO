/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project.tas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public class Kasir extends javax.swing.JFrame {

    /**
     * Creates new form HalamanUtamaKasir
     */
    public Kasir() {
        initComponents();
        tampilDataBarang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputCariProduk = new javax.swing.JTextField();
        tombolCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        tombolKembali = new javax.swing.JButton();
        inputKodeBarang = new javax.swing.JTextField();
        inputNamaBarang = new javax.swing.JTextField();
        inputHargaBarang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputJumlahBeli = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        inputBayar = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        inputKembali = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        inputTanggal = new javax.swing.JTextField();
        tombolSimpan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        inputNama = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel1.setText("Selamat Datang Kasir");

        jLabel2.setText("Cari Produk");

        inputCariProduk.setBackground(new java.awt.Color(255, 255, 204));
        inputCariProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCariProdukActionPerformed(evt);
            }
        });

        tombolCari.setBackground(new java.awt.Color(255, 255, 204));
        tombolCari.setText("Cari");
        tombolCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCariActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode", "Nama", "Harga", "Stok"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel4.setText("Harga Barang");

        tombolKembali.setBackground(new java.awt.Color(255, 102, 102));
        tombolKembali.setText("Kembali");
        tombolKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolKembaliActionPerformed(evt);
            }
        });

        inputKodeBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputKodeBarangActionPerformed(evt);
            }
        });

        inputHargaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputHargaBarangActionPerformed(evt);
            }
        });

        jLabel3.setText("Kode Barang");

        jLabel6.setText("Nama Barang");

        jLabel7.setText("Jumlah Beli");

        inputJumlahBeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputJumlahBeliActionPerformed(evt);
            }
        });

        jLabel8.setText("Total");

        jLabel9.setText("Bayar");

        inputBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputBayarActionPerformed(evt);
            }
        });

        jLabel10.setText("Kembali");

        jLabel11.setText("Tanggal");

        inputTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTanggalActionPerformed(evt);
            }
        });

        tombolSimpan.setBackground(new java.awt.Color(204, 255, 255));
        tombolSimpan.setText("Simpan Transaksi");
        tombolSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanActionPerformed(evt);
            }
        });

        jLabel5.setText("Nama Pembeli");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(226, 226, 226)
                        .addComponent(inputCariProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(tombolCari))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(inputBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(inputKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(inputTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(tombolSimpan)
                        .addGap(29, 29, 29)
                        .addComponent(tombolKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(inputHargaBarang)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(inputJumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(55, 55, 55)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(inputNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inputKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(inputCariProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tombolCari))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(inputKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(inputNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(inputHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel7))
                            .addComponent(inputJumlahBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(inputTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9))
                            .addComponent(inputBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel10))
                            .addComponent(inputKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tombolSimpan)
                            .addComponent(tombolKembali)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(502, 502, 502)
                        .addComponent(jLabel11)))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputCariProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCariProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCariProdukActionPerformed

    private void tombolKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolKembaliActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            Login z = new Login();
            z.setVisible(true);
            this.setVisible(false);
            this.dispose();
        } else if (confirm == JOptionPane.NO_OPTION) {

        }
    }//GEN-LAST:event_tombolKembaliActionPerformed

    private void inputKodeBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputKodeBarangActionPerformed
        // TODO add your handling code here:
        inputKodeBarang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tampilkanDetailBarang(inputKodeBarang.getText());
            }
        });
    }//GEN-LAST:event_inputKodeBarangActionPerformed

    private void inputHargaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputHargaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputHargaBarangActionPerformed

    private void tombolCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCariActionPerformed
        // TODO add your handling code here:
        cariDataBarang();
    }//GEN-LAST:event_tombolCariActionPerformed

    private void inputTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTanggalActionPerformed

    private void inputJumlahBeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputJumlahBeliActionPerformed
        // TODO add your handling code here:
        String kodeBarang = inputKodeBarang.getText();

        try (Connection conn = Koneksi.getConnection()) {
            String query = "SELECT harga, stok FROM pakaian WHERE kode = ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, kodeBarang);
                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {
                        int hargaBarang = rs.getInt("harga");
                        int stokBarang = rs.getInt("stok");
                        int jumlahBeli = Integer.parseInt(inputJumlahBeli.getText());

                        if (jumlahBeli > stokBarang) {
                            JOptionPane.showMessageDialog(this, "Jumlah beli melebihi stok yang tersedia", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        
                        int totalHarga = hargaBarang * jumlahBeli;

                        inputTotal.setText(String.valueOf(totalHarga));

                        String updateQuery = "UPDATE pakaian SET stok = ? WHERE kode = ?";
                        try (PreparedStatement updateStmt = conn.prepareStatement(updateQuery)) {
                            updateStmt.setInt(1, stokBarang - jumlahBeli);
                            updateStmt.setString(2, kodeBarang);
                            updateStmt.executeUpdate();
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_inputJumlahBeliActionPerformed

    private void inputBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputBayarActionPerformed
        // TODO add your handling code here:
        int totalHarga = Integer.parseInt(inputTotal.getText());
        int uangBayar = Integer.parseInt(inputBayar.getText());

        if (uangBayar < totalHarga) {
            JOptionPane.showMessageDialog(this, "Uang bayar tidak mencukupi", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int uangKembalian = uangBayar - totalHarga;

        inputKembali.setText(String.valueOf(uangKembalian));

        String tanggalTransaksi = LocalDate.now().toString();
        inputTanggal.setText(tanggalTransaksi);
        
        tampilDataBarang();
    }//GEN-LAST:event_inputBayarActionPerformed

    private void tombolSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSimpanActionPerformed
        // TODO add your handling code here:
        String namaPembeli = inputNama.getText();
        String kodeBarang = inputKodeBarang.getText();
        int jumlahBeli = Integer.parseInt(inputJumlahBeli.getText());
        int totalHarga = Integer.parseInt(inputTotal.getText());
        int uangBayar = Integer.parseInt(inputBayar.getText());
        int uangKembali = Integer.parseInt(inputKembali.getText());
        String tanggalTransaksi = inputTanggal.getText();

        LocalDateTime waktuTransaksi = LocalDateTime.now();
        String kodeTransaksi = waktuTransaksi.format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss"));

        try (Connection conn = Koneksi.getConnection()) {
            String query = "INSERT INTO transaksi (kode_transaksi, nama_pembeli, kode_pakaian, jumlah_beli, total_harga, uang_bayar, uang_kembali, waktu_transaksi) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, kodeTransaksi);
                stmt.setString(2, namaPembeli);
                stmt.setString(3, kodeBarang);
                stmt.setInt(4, jumlahBeli);
                stmt.setInt(5, totalHarga);
                stmt.setInt(6, uangBayar);
                stmt.setInt(7, uangKembali);
                stmt.setString(8, tanggalTransaksi);

                int rowsInserted = stmt.executeUpdate();
                if (rowsInserted > 0) {
                    JOptionPane.showMessageDialog(this, "Transaksi berhasil disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    resetInputFields();
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tombolSimpanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputBayar;
    private javax.swing.JTextField inputCariProduk;
    private javax.swing.JTextField inputHargaBarang;
    private javax.swing.JTextField inputJumlahBeli;
    private javax.swing.JTextField inputKembali;
    private javax.swing.JTextField inputKodeBarang;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputNamaBarang;
    private javax.swing.JTextField inputTanggal;
    private javax.swing.JTextField inputTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JButton tombolCari;
    private javax.swing.JButton tombolKembali;
    private javax.swing.JButton tombolSimpan;
    // End of variables declaration//GEN-END:variables
private void tampilDataBarang() {
        DefaultTableModel tableBarang = (DefaultTableModel) table.getModel();
        tableBarang.setRowCount(0);

        try (Connection conn = Koneksi.getConnection()) {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pakaian");

            while (rs.next()) {
                String kode = rs.getString("kode");
                String nama = rs.getString("nama");
                int harga = rs.getInt("harga");
                int stok = rs.getInt("stok");

                Object[] rowData = {kode, nama, harga, stok};
                tableBarang.addRow(rowData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void cariDataBarang() {
        String cari = inputCariProduk.getText();
        DefaultTableModel tableBarang = (DefaultTableModel) table.getModel();
        tableBarang.setRowCount(0);

        try (Connection conn = Koneksi.getConnection()) {
            String query = "SELECT * FROM pakaian WHERE nama LIKE ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, "%" + cari + "%");
                try (ResultSet rs = stmt.executeQuery()) {
                    while (rs.next()) {
                        String kode_barang = rs.getString("kode");
                        String nama_barang = rs.getString("nama");
                        int harga_barang = rs.getInt("harga");
                        int stok_barang = rs.getInt("stok");

                        Object[] rowData = {kode_barang, nama_barang, harga_barang, stok_barang};
                        tableBarang.addRow(rowData);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void tampilkanDetailBarang(String kodeBarang) {
        try (Connection conn = Koneksi.getConnection()) {
            String query = "SELECT * FROM pakaian WHERE kode = ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, kodeBarang);
                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {
                        inputNamaBarang.setText(rs.getString("nama"));
                        inputHargaBarang.setText(String.valueOf(rs.getInt("harga")));
                    } else {
                        clearInputFields();
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void clearInputFields() {
        inputNamaBarang.setText("");
        inputHargaBarang.setText("");
    }
    
    private void resetInputFields() {
    inputNama.setText("");
    inputKodeBarang.setText("");
    inputNamaBarang.setText("");
    inputHargaBarang.setText("");
    inputJumlahBeli.setText("");
    inputTotal.setText("");
    inputBayar.setText("");
    inputKembali.setText("");
    inputTanggal.setText("");
}

}

